buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		jcenter()
		mavenCentral()
		maven {url='https://dist.creeper.host/Sponge/maven'}

	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
	}
}

repositories {
	maven {
		url "https://maven.tterrag.com/"
	}
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.k-4u.nl"
	}
	flatDir {
		dirs 'deps'
	}
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

// Required to build correctly on platforms that may default to UTF-8 instead, like most Linux
// installations.
compileJava { options.encoding = "iso-8859-1" }

version = "${mc_version}-${mod_version}"
group = "com.telepathicgrunt.the_bumblezone"
archivesBaseName = 'the_bumblezone'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: "${mapping}-mixed-${yarnmcp_version}"
    //accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
			arg "-mixin.config="+archivesBaseName+".mixins.json"
            mods { the_bumblezone { source sourceSets.main } }
        }

        server {
            workingDirectory project.file('run')
			arg "-mixin.config="+archivesBaseName+".mixins.json"
            mods { the_bumblezone { source sourceSets.main } }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

	// Remove these if you don't have a deps folder with these mods in it
	// (some of the jars had to be renamed to make it be imported in dev)

	// implementation fg.deobf("ignored:Abnormals-Core-1.15.2:1.0.6")
	// implementation fg.deobf("ignored:beesourceful:1.2.2")
	// implementation fg.deobf("ignored:Buzzier-Bees-1.15.2:1.5.2")
	//implementation fg.deobf("ignored:potionofbees-1.16.1:1.0.1.0")
	implementation fg.deobf("ignored:productivebees-1.16.3:0.4.0.1")
	implementation fg.deobf("ignored:carrierbees-1.16.3:0.0.2.2")
	implementation fg.deobf("ignored:potionofbees-1.16.3:1.1.0.0")

	compileOnly fg.deobf("mezz.jei:jei-1.16.2:7.3.2.25:api")
	runtimeOnly fg.deobf("mezz.jei:jei-1.16.2:7.3.2.25")
	//runtimeOnly fg.deobf("ignored:modname-1.15.2:x.x.x")
}


jar {
    manifest {
        attributes([
            "Specification-Title": "the_bumblezone",
            "Specification-Vendor": "telepathicgrunt",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"telepathicgrunt",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "the_bumblezone.mixins.json"
        ])
    }
}


import groovy.json.JsonSlurper
import groovy.json.JsonOutput
processResources {
	// This will ensure that this task is redone when the versions change.
	inputs.property 'version', project.version

	// Replace stuff in mods.toml, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'META-INF/mods.toml'

		// Replace version
		expand 'version':project.version
	}

	// Copy everything else except the mods.toml
	from(sourceSets.main.resources.srcDirs) {
		exclude 'META-INF/mods.toml'
	}
	
	// Minifies all .json files when building the mod.
	// Source files are not minified, only the jar copies.
	doLast {
		def jsonMinifyStart = System.currentTimeMillis()
		def jsonMinified = 0
		def jsonBytesSaved = 0
		fileTree(dir: outputs.files.asPath, include: '**/*.json').each {
			File file = it
			jsonMinified++
			def oldLength = file.length()
			file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
			jsonBytesSaved += oldLength - file.length()
		}
		println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
	}
}

apply plugin: 'org.spongepowered.mixin'
mixin { add sourceSets.main, "the_bumblezone.refmap.json" }